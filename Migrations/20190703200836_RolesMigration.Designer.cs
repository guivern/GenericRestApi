// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestApiBase.Data;

namespace RestApiBase.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190703200836_RolesMigration")]
    partial class RolesMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RestApiBase.Models.Rol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Activo = true,
                            Descripcion = "Posee todos los permisos",
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2L,
                            Activo = true,
                            Descripcion = "Posee permisos de solo lectura",
                            Nombre = "Operador"
                        });
                });

            modelBuilder.Entity("RestApiBase.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Apellido");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaEdicion");

                    b.Property<long>("IdRol");

                    b.Property<long?>("IdUsarioCreador");

                    b.Property<long?>("IdUsarioEditor");

                    b.Property<string>("Nombre");

                    b.Property<string>("NroDocumento");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsarioCreador");

                    b.HasIndex("IdUsarioEditor");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RestApiBase.Models.Value", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaEdicion");

                    b.Property<long?>("IdUsarioCreador");

                    b.Property<long?>("IdUsarioEditor");

                    b.HasKey("Id");

                    b.HasIndex("IdUsarioCreador");

                    b.HasIndex("IdUsarioEditor");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("RestApiBase.Models.Usuario", b =>
                {
                    b.HasOne("RestApiBase.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RestApiBase.Models.Usuario", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("IdUsarioCreador");

                    b.HasOne("RestApiBase.Models.Usuario", "UsuarioEditor")
                        .WithMany()
                        .HasForeignKey("IdUsarioEditor");
                });

            modelBuilder.Entity("RestApiBase.Models.Value", b =>
                {
                    b.HasOne("RestApiBase.Models.Usuario", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("IdUsarioCreador");

                    b.HasOne("RestApiBase.Models.Usuario", "UsuarioEditor")
                        .WithMany()
                        .HasForeignKey("IdUsarioEditor");
                });
#pragma warning restore 612, 618
        }
    }
}
